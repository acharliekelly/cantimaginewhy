{"version":3,"sources":["utils/imageApi.js","components/ImageCarousel.jsx","components/Home.jsx","components/About.jsx","utils/sorting.js","components/GalleryNav.jsx","components/Gallery.jsx","App.js","serviceWorker.js","index.js"],"names":["cloudName","fetchGallery","tagName","url","concat","jsonImgList","axios","variableImageSrc","publicId","imgWidthPx","arguments","length","undefined","ImageCarousel","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateImages","then","res","setState","pictures","data","resources","isLoaded","handleClickImage","img","props","selectImage","state","_this2","_this$state","react_default","a","createElement","react_coverflow_main_default","width","height","displayQuantityOfSide","navigation","infiniteScroll","enableHeading","media","@media (max-width: 900px)","@media (min-width: 900px)","map","pic","lib","public_id","crop","alt","context","custom","caption","onClick","className","Component","clickImage","console","log","Home","components_ImageCarousel","AboutPage","filters","name","index","options","tag","thumbnail","description","GalleryNav","handleSortSelect","eventKey","filterIndex","selectedNav","handleClearGallery","handleNavClick","nav","handleNavChange","activeFilter","Nav","variant","onSelect","filter","Item","key","Link","option","cls","id","quality","fetchFormat","Gallery","handleAlbumSelect","event","target","updateGallery","selectedAlbum","imageViewOpen","currentImage","clearGallery","openImageView","picture","source","title","getPictureCaption","getPictureProperty","location","medium","size","year","forSale","forPrint","hasProperty","price","materialInfo","pictureObj","property","val","errValue","err","propertyName","closeImageView","currentAlbum","components_GalleryNav","src","posterId","ContactPage","App","react_router_dom","basename","to","react_router","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f33d9643.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst cloudName = 'cantimaginewhy';\n// const EXCLUDE_NFS = true;\n\nconst jsonImgList = tagName => {\n  return `https://res.cloudinary.com/${cloudName}/image/list/${tagName}.json`;\n}\n\n// Return all JSON data of images tagged with tagName\nexport const fetchGallery = tagName => {\n  const url = jsonImgList(tagName);\n  return axios(url);\n}\n\n// Return JSON data of all images where context.ref = keyName\nexport const fetchRelatedImages = keyName => {\n  const url = `https://res.cloudinary.com/${cloudName}/image/context`;\n  return axios({\n    method: 'GET',\n    url: url,\n  });\n}\n\n// Return source URL for watermarked image\nexport const watermarkedImageSrc = publicId => {\n  return `https://res.cloudinary.com/${cloudName}/w_1000/w_500,l_ck_logo,o_30/${publicId}.jpg`;\n}\n\n// Return source URL for non-watermarked image\nexport const cleanImageSrc = publicId => {\n  return `https://res.cloudinary.com/${cloudName}/w_1000/${publicId}.jpg`;\n}\n\n// return source URL of arbitrary-sized, non-watermarked image\nexport const variableImageSrc = (publicId, imgWidthPx = 500) => {\n  return `https://res.cloudinary.com/${cloudName}/w_${imgWidthPx}/${publicId}.jpg`;\n}\n\n","import React, { Component } from 'react';\nimport { Image } from 'cloudinary-react';\nimport Coverflow from 'react-coverflow';\nimport { fetchGallery } from '../utils/imageApi';\n\n\n\nclass ImageCarousel extends Component {\n\n  constructor () {\n    super();\n    this.state = {\n      isLoaded: false,\n      pictures: []\n    }\n  }\n\n  componentDidMount () {\n    const { tagName } = this.props;\n    this.updateImages(tagName);\n  }\n\n  updateImages = tagName => {\n    fetchGallery(tagName)\n      .then(res => {\n        this.setState({\n          pictures: res.data.resources,\n          isLoaded: true\n        })\n      });\n  }\n\n  handleClickImage = img => {\n    this.props.selectImage(img);\n  }\n\n  render () {\n    const { pictures, isLoaded } = this.state;\n    if (!isLoaded) {\n      return (\n        <h2 className=\"loading\">Loading...</h2>\n      )\n    } else {\n      return (\n        <Coverflow\n          width={1080}\n          height={480}\n          displayQuantityOfSide={1}\n          navigation={true}\n          infiniteScroll={true}\n          enableHeading={true}\n          media={{\n            '@media (max-width: 900px)': {\n              width: '600px',\n              height: '300px'\n            },\n            '@media (min-width: 900px)': {\n              width: '960px',\n              height: '600px'\n            }\n          }}\n        >\n          {pictures.map(pic => (\n            <Image \n              cloudName=\"cantimaginewhy\" \n              publicId={pic.public_id}\n              crop=\"fit\" \n              height=\"400\"\n              alt={pic.context.custom.caption}\n              onClick={() => {this.handleClickImage(pic)}}\n            />\n          ))}\n        </Coverflow>\n      );\n    }\n    \n  }\n\n}\n\nexport default ImageCarousel;\n","import React from 'react';\nimport ImageCarousel from './ImageCarousel';\n\nconst clickImage = img => {\n  console.log('image clicked: ', img)\n} \n\nexport default function Home() {\n  \n   return (\n      <div className=\"content\">\n        <main>\n          <header>Can't Imagine Why</header>\n          <ImageCarousel tagName=\"favorite\" selectImage={clickImage} />\n        </main>\n      </div>\n    );\n}\n\n","import React from 'react';\n\nconst AboutPage = () => (\n  <div className=\"content\">\n    <header>About</header>\n    <div className=\"lorem\">\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut \n      labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n      nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n      cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui \n      officia deserunt mollit anim id est laborum.</div>\n  </div>\n);\n\nexport default AboutPage;\n","\nexport const filters = [\n  // {\n  //   \"name\": \"Album\",\n  //   \"index\": 0,\n  //   \"options\": [\n  //     {\n  //       \"name\": \"Plein Air\",\n  //       \"tag\": \"en plein air\",\n  //       \"thumbnail\": \"art/footbridge-watertown-dam_2019\",\n  //       \"description\": \"Painted outdoors looking at the subject, instead of in a studio looking at a photo\"\n  //     },\n  //     {\n  //       \"name\": \"Holidays\",\n  //       \"tag\": \"holiday\",\n  //       \"thumbnail\": \"art/valentines-card-2012\",\n  //       \"description\": \"Designs for holiday cards\"\n  //     },\n  //     {\n  //       \"name\": \"Knotwork\",\n  //       \"tag\": \"knotwork\",\n  //       \"thumbnail\": \"art/lotus_26804737776_o_i7e8dw\",\n  //       \"description\": \"Abstract art inspired by traditional Celtic themes\"\n  //     },\n  //     {\n  //       \"name\": \"Name Tags\",\n  //       \"tag\": \"nametag\",\n  //       \"thumbnail\": \"nfs/charlie-3_33523261796_o_njzr8m\",\n  //       \"description\": \"Custom name tags for people at various organizations I attend. Or by commission.\"\n  //     },\n  //     {\n  //       \"name\": \"Latticery\",\n  //       \"tag\": \"plaitwork\",\n  //       \"thumbnail\": \"nfs/eye_26745608572_o_zqbocw\",\n  //       \"description\": \"Plaitwork - like knotwork but with all right angles\"\n  //     }\n  //   ]\n  // },\n  {\n    \"name\": \"Location\",\n    \"index\": 0,\n    \"options\": [\n      {\n        \"name\": \"Downtown Boston\",\n        \"tag\": \"downtown-boston\",\n        \"thumbnail\": \"art/esplanade-sunset_2018\",\n        \"description\": \"Scenes from Downtown Boston\"\n      },\n      {\n        \"name\": \"Cambridge\",\n        \"tag\": \"cambridge\",\n        \"thumbnail\": \"art/memorial_drive_z68y3q\",\n        \"description\": \"Scenes from Cambridge\"\n      },\n      {\n        \"name\": \"Waltham\",\n        \"tag\": \"waltham\",\n        \"thumbnail\": \"art/early_fall_mt_feake\",\n        \"description\": \"Scenes from Waltham\"\n      },\n      {\n        \"name\": \"Charles River\",\n        \"tag\": \"charles-river\",\n        \"thumbnail\": \"art/watertown_dam-fs\",\n        \"description\": \"Scenes from along the Charles\"\n      },\n      {\n        \"name\": \"Greater Boston\",\n        \"tag\": \"boston-area\",\n        \"thumbnail\": \"art/seven_hills_park_hiiasw\",\n        \"description\": \"Around the Boston area\"\n      },\n      {\n        \"name\": \"Maine\",\n        \"tag\": \"maine\",\n        \"thumbnail\": \"art/parker_point_rgzpme\",\n        \"description\": \"Scenes from Maine\"\n      },\n      {\n        \"name\": \"Elsewhere\",\n        \"tag\": \"elsewhere\",\n        \"thumbnail\": \"art/bodiam-castle_2011\",\n        \"description\": \"Scenes from elsewhere\"\n      }\n    ]\n  },\n  {\n    \"name\": \"Medium\",\n    \"index\": 1,\n    \"options\": [\n      {\n        \"name\": \"Pencil\",\n        \"tag\": \"graphite\",\n        \"thumbnail\": \"art/winter-house\",\n        \"description\": \"Graphite pencil\"\n      },\n      {\n        \"name\": \"Colored Pencil\",\n        \"tag\": \"colored pencil\",\n        \"thumbnail\": \"art/winter-yosemite\",\n        \"description\": \"Colored pencil\"\n      },\n      {\n        \"name\": \"Watercolor Pencil\",\n        \"tag\": \"watercolor pencil\",\n        \"thumbnail\": \"art/leaving-star-island_2015\",\n        \"description\": \"Drawn first, then turned into watercolor by applying water\"\n      },\n      {\n        \"name\": \"Pastel\",\n        \"tag\": \"pastel\",\n        \"thumbnail\": \"art/rainbow-end_2017\",\n        \"description\": \"Used pastels, though generally just for background\"\n      },\n      {\n        \"name\": \"Watercolor\",\n        \"tag\": \"watercolor\",\n        \"thumbnail\": \"art/late-spring-on-the-charles_2017\",\n        \"description\": \"Traditional watercolor painting with brush\"\n      },\n      {\n        \"name\": \"Acrylic\",\n        \"tag\": \"acrylic\",\n        \"thumbnail\": \"art/riparian_balcony-fs\",\n        \"description\": \"Layered acrylic paints\"\n      }\n    ]\n  },\n  {\n    \"name\": \"Style\",\n    \"index\": 2,\n    \"options\": [\n      {\n        \"name\": \"Triptych\",\n        \"tag\": \"triptych\",\n        \"thumbnail\": \"art/winter-yosemite\",\n        \"description\": \"Picture divided into 3 (or more) panels\"\n      },\n      {\n        \"name\": \"Pointillist\",\n        \"tag\": \"pointillist\",\n        \"thumbnail\": \"art/fun-with-dots_2017\",\n        \"description\": \"Created by making tiny dots instead of brush strokes\"\n      },\n      {\n        \"name\": \"Nightscape\",\n        \"tag\": \"nightscape\",\n        \"thumbnail\": \"art/cambridge-night_2019\",\n        \"description\": \"Scenes from after dark, painted on black canvas\"\n      },\n      {\n        \"name\": \"Miniatures\",\n        \"tag\": \"miniature\",\n        \"thumbnail\": \"art/caterpillar_hill_qmwg7s\",\n        \"description\": \"Original painting is less than 6 inches on one side\"\n      },\n      {\n        \"name\": \"Panoramic\",\n        \"tag\": \"panorama\",\n        \"thumbnail\": \"art/winter-moon-2\",\n        \"description\": \"Where length is greater than double the height\"\n      },\n    ]\n  },\n  {\n    \"name\": \"Season\",\n    \"index\": 3,\n    \"options\": [\n      {\n        \"name\": \"Summer\",\n        \"tag\": \"summer\",\n        \"thumbnail\": \"art/salt-pond\",\n        \"description\": \"Summer scenes\"\n      },\n      {\n        \"name\": \"Fall\",\n        \"tag\": \"autumn\",\n        \"thumbnail\": \"art/autumn-at-mt-feake_2017\",\n        \"description\": \"Fall scenes\"\n      },\n      {\n        \"name\": \"Winter\",\n        \"tag\": \"winter\",\n        \"thumbnail\": \"art/winter-walk\",\n        \"description\": \"Winter scenes\"\n      },\n      {\n        \"name\": \"Spring\",\n        \"tag\": \"spring\",\n        \"thumbnail\": \"art/esplanade-sunset_2018\",\n        \"description\": \"Spring scenes\"\n      }\n    ]\n  },\n  {\n    \"name\": \"Color\",\n    \"index\": 4,\n    \"options\": [\n      {\n        \"name\": \"Blue\",\n        \"tag\": \"blue\",\n        \"thumbnail\": \"art/shamrock-i_26838853055_o_oqrvik\",\n        \"description\": \"Images with the color blue in them\"\n      },\n      {\n        \"name\": \"Green\",\n        \"tag\": \"green\",\n        \"thumbnail\": \"art/lotus_26804737776_o_i7e8dw\",\n        \"description\": \"Images with the color green in them\"\n      },\n      {\n        \"name\": \"Red\",\n        \"tag\": \"red\",\n        \"thumbnail\": \"art/winter-holidays-card-2015\",\n        \"description\": \"Images with some version of red in them\"\n      }\n    ]\n  },\n  {\n    \"name\": \"Availability\",\n    \"index\": 5,\n    \"options\": [\n      {\n        \"name\": \"Original for Sale\",\n        \"tag\": \"for-sale\",\n        \"thumbnail\": \"art/memorial_drive_z68y3q\",\n        \"description\": \"You can purchase the original art piece\"\n      },\n      {\n        \"name\": \"Buy a Print\",\n        \"tag\": \"for-print\",\n        \"thumbnail\": \"art/esplanade-sunset_2018\",\n        \"description\": \"You can purchase a print\"\n      },\n      {\n        \"name\": \"Viewing Only\",\n        \"tag\": \"nfs\",\n        \"thumbnail\": \"nfs/eye_26745608572_o_zqbocw\",\n        \"description\": \"Feel free to look\"\n      }\n    ]\n  }\n]\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Nav from 'react-bootstrap/Nav';\nimport { Image, CloudinaryContext, Transformation } from 'cloudinary-react';\nimport { filters } from '../utils/sorting';\nimport '../css/navlist.scss';\n\nclass GalleryNav extends Component {\n\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      filterIndex: 0,\n      selectedNav: null\n    }\n  }\n\n  componentDidMount () {\n    this.handleSortSelect(0);\n  }\n\n  handleSortSelect = eventKey => {\n    // console.log('Sort selected: ' + eventKey);\n    this.setState({\n      filterIndex: eventKey,\n      selectedNav: null\n    });\n    // clear thumbnails\n    this.props.handleClearGallery();\n  }\n\n  handleNavClick = nav => {\n    // nav is object (option) from filter list\n    // { name, tag, thumbnail, description }\n    this.setState({\n      selectedNav: nav\n    });\n\n    this.props.handleNavChange(nav.tag);\n  }\n\n  render () {\n    const { filterIndex, selectedNav } = this.state;\n    const activeFilter = filters[filterIndex];\n    return (\n      <CloudinaryContext cloudName=\"cantimaginewhy\">\n        <Nav variant=\"pills\" className=\"gallery-nav\" onSelect={this.handleSortSelect}>\n          <span className=\"label\">Filter By:</span>\n          {filters.map(filter => (\n            <Nav.Item key={filter.name}>\n              <Nav.Link eventKey={filter.index}>{filter.name}</Nav.Link>\n            </Nav.Item>\n            )\n          )}\n        </Nav>\n        <header className=\"album-list\">\n          {activeFilter.options.map(option => {\n              let cls = 'album-btn';\n              if (selectedNav && selectedNav.tag === option.tag) {\n                cls += ' selected-nav'\n              }\n              return (\n                <div key={option.tag} id={option.tag} className={cls} onClick={() => this.handleNavClick(option)}>\n                    <Image  \n                        publicId={`${option.thumbnail}`}\n                        className=\"thumbnail inline\"\n                        width=\"150\"\n                        height=\"150\"\n                        crop=\"fit\"\n                        quality=\"80\"\n                    >\n                        <Transformation quality=\"auto\" fetchFormat=\"auto\" />\n                    </Image>\n                    <div className=\"album-name\">{option.name}</div>\n                    {/* <div className=\"album-desc\">{option.description}</div> */}\n                </div>\n              );\n            })}\n        </header>\n        {selectedNav && (\n          <div className=\"current-nav\">\n            <div className=\"nav-title\">{selectedNav.name}</div>\n            <div className=\"nav-description\">{selectedNav.description}</div>\n          </div>\n        )}\n      </CloudinaryContext>\n    );\n  }\n}\n\nGalleryNav.propTypes = {\n  handleNavChange: PropTypes.func.isRequired,\n  handleClearGallery: PropTypes.func\n};\n\nexport default GalleryNav;\n","import React, { Component } from 'react';\nimport { Image, CloudinaryContext } from 'cloudinary-react';\nimport GalleryNav from './GalleryNav';\n// import ImageDisplay from './ImageDisplay';\nimport { fetchGallery, variableImageSrc } from '../utils/imageApi';\n// import { purchaseOriginal, purchasePrint, purchasePoster } from '../utils/productApi';\nimport '../css/gallery.scss';\n\nclass Gallery extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      pictures: [],\n      selectedAlbum: null,\n      imageViewOpen: false,\n      currentImage: null\n    };\n  }\n\n  componentDidMount () {\n    const { currentAlbum } = this.props;\n    if (currentAlbum) {\n      this.updateGallery(currentAlbum);\n    }\n    \n  }\n\n  handleAlbumSelect = event => {\n    const tagName = event.target.id;\n    console.log('Selected album: ', tagName);\n    this.updateGallery(tagName);\n  }\n\n  updateGallery = tagName => {\n    // load images\n    fetchGallery(tagName)\n      .then(res => {\n        this.setState({\n          selectedAlbum: tagName, \n          pictures: res.data.resources,\n          imageViewOpen: false,\n          currentImage: null\n        });\n      });\n  }\n\n  clearGallery = () => {\n    this.setState({\n      pictures: [],\n      selectedAlbum: null,\n      imageViewOpen: false,\n      currentImage: null\n    })\n  }\n\n  openImageView = picture => {\n    const img = {\n      source: variableImageSrc(picture.public_id, 400),\n      title: this.getPictureCaption(picture),\n      description: this.getPictureProperty(picture, 'alt'),\n      location: this.getPictureProperty(picture, 'location'),\n      medium: this.getPictureProperty(picture, 'medium'),\n      size: this.getPictureProperty(picture, 'size'),\n      year: this.getPictureProperty(picture, 'year'),\n      forSale: (this.getPictureProperty(picture, 'original') === 'available'),\n      forPrint: (this.hasProperty('canvas-id') || this.hasProperty('poster-id')),\n      price: (this.getPictureProperty(picture, 'price', 'NFS')),\n      materialInfo: this.hasProperty('medium') && this.hasProperty('size')\n    }\n    this.setState({\n      imageViewOpen: true,\n      currentImage: img\n    });\n  }\n\n  getPictureCaption = pictureObj => {\n    return this.getPictureProperty(pictureObj, 'caption', 'Untitled');\n  }\n\n  getPictureProperty = (pictureObj, property, errValue = '') => {\n    let val;\n    try {\n      val = pictureObj.context.custom[property];\n    } catch (err) {\n      val = errValue;\n    }\n    return val;\n  }\n\n  hasProperty = propertyName => {\n    const pictureObj = this.props.currentImage;\n    let val = false;\n    try {\n      val = (pictureObj.context.custom[propertyName] != null)\n    } catch (err) {\n      return false;\n    }\n    return val;\n  }\n\n  \n\n  closeImageView = () => {\n    this.setState({\n      imageViewOpen: false,\n      currentImage: null\n    })\n  }\n    \n  render () {\n    const { pictures, currentImage, imageViewOpen } = this.state;\n    return (\n        <div className=\"content\">\n          <CloudinaryContext cloudName=\"cantimaginewhy\">\n            \n            <GalleryNav \n              handleNavChange={this.updateGallery}\n              handleClearGallery={this.clearGallery} \n            />\n\n            <main className=\"display-area\">\n              \n              <div className=\"gallery\">\n                \n                {pictures.map(picture => {\n                  return (\n                    <div className=\"responsive thumbnail\" key={picture.public_id}>\n                      \n                      <Image \n                        publicId={picture.public_id}\n                        height=\"100\"\n                        crop=\"fit\"\n                        onClick={() => this.openImageView(picture)}\n                      />\n                    </div>\n                    )\n                }) }\n              </div>\n\n              {imageViewOpen && (\n                <div className=\"image-view\">\n                  <img alt=\"\" src={currentImage.source} onClick={this.closeImageView} />\n                  <div className=\"image-info\">\n                    <div className=\"title\">{currentImage.title}</div>\n                    <div className=\"info\">{currentImage.description}</div>\n                    <div className=\"info\">{currentImage.size}, {currentImage.medium}</div>\n                    {currentImage.forSale && (\n                      <div className=\"options\">\n                        <span className=\"label\">Buy Original:</span>\n                        <span className=\"purchase buy-orig\">${currentImage.price}</span>\n                      </div>\n                    )}\n                    {currentImage.forPrint && (\n                      <div className=\"options\">\n                        <span className=\"label\">Buy Print:</span>\n                        <span \n                          className=\"purchase buy-print\" \n                          onClick={() => console.log('Buy Poster #' + currentImage.posterId)}\n                        >Poster</span>\n                      </div>\n                    )}\n                    \n                  </div>\n                  \n                </div>\n              )}\n              \n            </main>\n          </CloudinaryContext>\n        </div>\n\n      );\n    }\n}\n\nexport default Gallery;\n","import React from 'react';\nimport { HashRouter as Router, Route, NavLink } from 'react-router-dom';\nimport Nav from 'react-bootstrap/Nav';\n\nimport './css/main.scss';\n\n// import Menu from './components/Menu';\nimport Home from './components/Home';\nimport AboutPage from './components/About';\nimport Gallery from './components/Gallery';\n\nconst ContactPage = () => (\n  <div className=\"content\">\n    <header>Contact</header>\n    <main className=\"lorem\">Coming Soon</main>\n  </div>\n);\n\nconst App = () => {\n  return (\n    <Router basename='/'>\n      <Nav className=\"menu\">\n        <Nav.Item>\n          <NavLink className=\"homelink\" to=\"/\">Home</NavLink>\n        </Nav.Item>\n        <Nav.Item>\n          <NavLink to=\"/about\">About</NavLink>\n        </Nav.Item>\n        <Nav.Item>\n          <NavLink to=\"/gallery\">Gallery</NavLink>\n        </Nav.Item>\n        <Nav.Item>\n          <NavLink to=\"/contact\">Contact</NavLink>\n        </Nav.Item>\n      </Nav>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/about\" component={AboutPage} />\n      <Route path=\"/contact\" component={ContactPage} />\n      <Route path=\"/gallery\" component={Gallery} />\n      \n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}