{"version":3,"sources":["components/Home.jsx","components/About.jsx","components/GalleryNav.jsx","utils/sorting.js","components/Gallery.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","AboutPage","sortMethods","name","tag","thumbnail","GalleryNav","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSortSelect","eventKey","console","log","setState","sortIndex","state","_this2","sortList","lib","cloudName","Nav_default","variant","onSelect","Item","Link","map","album","key","id","onClick","handleNavChange","publicId","concat","width","height","crop","quality","fetchFormat","Component","Gallery","handleAlbumSelect","event","tagName","target","updateGallery","url","axios","get","then","res","selectedAlbum","pictures","data","resources","lightboxOpen","selectedImage","openLightbox","pictureId","closeLightbox","currentAlbum","_this$state","components_GalleryNav","picture","caption","context","custom","err","orient","public_id","dpr","responsive_placeholder","index_es","mainSrc","onCloseRequest","ContactPage","App","react_router_dom","to","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7369f612.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => (\n  <div>\n    <header>Can't Imagine Why</header>\n    <div className=\"todo\">Coming Soon</div>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\n\nconst AboutPage = () => (\n  <div>\n    <header>About</header>\n    <main className=\"todo\">Coming Soon</main>\n  </div>\n);\n\nexport default AboutPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Nav from 'react-bootstrap/Nav';\nimport { Image, CloudinaryContext, Transformation } from 'cloudinary-react';\nimport { albums, media, seasons, styles } from '../utils/sorting';\nimport '../css/list.css';\n\nconst sortMethods = [ albums, media, seasons, styles ];\n// const sortNames = [ 'Album', 'Medium', 'Season', 'Style' ];\n\nclass GalleryNav extends Component {\n\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      sortIndex: 1\n    }\n  }\n\n  handleSortSelect = eventKey => {\n    console.log('Sort selected: ' + eventKey);\n    this.setState({\n      sortIndex: eventKey\n    })\n\n  }\n\n  render () {\n    const { sortIndex } = this.state;\n    const sortList = sortMethods[sortIndex];\n    return (\n      <CloudinaryContext cloudName=\"cantimaginewhy\">\n        <Nav variant=\"pills\" className=\"gallery-nav\" onSelect={this.handleSortSelect}>\n          <Nav.Item><Nav.Link eventKey=\"0\">Album</Nav.Link></Nav.Item>\n          <Nav.Item><Nav.Link eventKey=\"1\">Medium</Nav.Link></Nav.Item>\n          <Nav.Item><Nav.Link eventKey=\"2\">Season</Nav.Link></Nav.Item>\n          <Nav.Item><Nav.Link eventKey=\"3\">Style</Nav.Link></Nav.Item>\n        </Nav>\n        <header className=\"album-list\">\n          {sortList.map(album => {\n            /*  generate album list */\n              return (\n                <div key={album.tag} id={album.tag} className=\"album-btn\" onClick={() => this.props.handleNavChange(album.tag)}>\n                    <Image  \n                        publicId={`art/${album.thumbnail}`}\n                        className=\"thumbnail inline\"\n                        width=\"150\"\n                        height=\"150\"\n                        crop=\"fit\"\n                        quality=\"80\"\n                    >\n                        <Transformation quality=\"auto\" fetchFormat=\"auto\" />\n                    </Image>\n                    <h3 className=\"album-name\">{album.name}</h3>\n                </div>\n              );\n            })}\n        </header>\n      </CloudinaryContext>\n    );\n  }\n}\n\nGalleryNav.propTypes = {\n  handleNavChange: PropTypes.func.isRequired\n};\n\nexport default GalleryNav;\n","\nexport const albums = [\n  {\n    \"name\": \"Landscapes\",\n    \"tag\": \"landscape\",\n    \"thumbnail\": \"wachusett-reservoir\"\n  },\n  {\n    \"name\": \"Monogram\",\n    \"tag\": \"monogram\",\n    \"thumbnail\": \"ak-blue-heart-monogram\"\n  },\n  {\n    \"name\": \"Illuminations\",\n    \"tag\": \"nameplate\",\n    \"thumbnail\": \"jennylynne_2012\"\n  },\n  {\n    \"name\": \"Holiday Cards\",\n    \"tag\": \"holiday\",\n    \"thumbnail\": \"valentines-card-2012\"\n  },\n  {\n    \"name\": \"En Plein Air\",\n    \"tag\": \"en plein air\",\n    \"thumbnail\": \"watertown_footbridge-fs\"\n  }\n];\n\nexport const media = [\n  {\n    \"name\": \"Pencil\",\n    \"tag\": \"graphite\",\n    \"thumbnail\": \"winter-house\"\n  },\n  {\n    \"name\": \"Colored Pencil\",\n    \"tag\": \"colored pencil\",\n    \"thumbnail\": \"winter-yosemite\"\n  },\n  {\n    \"name\": \"Watercolor Pencil\",\n    \"tag\": \"watercolor pencil\",\n    \"thumbnail\": \"leaving-star-island_2015\"\n  },\n  {\n    \"name\": \"Pastel\",\n    \"tag\": \"pastel\",\n    \"thumbnail\": \"rainbow-end_2017\"\n  },\n  {\n    \"name\": \"Watercolor\",\n    \"tag\": \"watercolor\",\n    \"thumbnail\": \"ck_ice\"\n  },\n  {\n    \"name\": \"Acrylic\",\n    \"tag\": \"acrylic\",\n    \"thumbnail\": \"riparian_balcony-fs\"\n  }\n];\n\nexport const styles = [\n  {\n    \"name\": \"Triptych\",\n    \"tag\": \"triptych\",\n    \"thumbnail\": \"winter-yosemite\"\n  },\n  {\n    \"name\": \"Pointillist\",\n    \"tag\": \"pointillist\",\n    \"thumbnail\": \"fun-with-dots_2017\"\n  },\n  {\n    \"name\": \"Nightscape\",\n    \"tag\": \"nightscape\",\n    \"thumbnail\": \"cambridge-night_2019\"\n  },\n  {\n    \"name\": \"Panoramic\",\n    \"tag\": \"panorama\",\n    \"thumbnail\": \"winter-moon-2\"\n  },\n];\n\nexport const seasons = [\n  {\n    \"name\": \"Summer\",\n    \"tag\": \"summer\",\n    \"thumbnail\": \"salt-pond\"\n  },\n  {\n    \"name\": \"Fall\",\n    \"tag\": \"autumn\",\n    \"thumbnail\": \"autumn-at-mt-feake_2017\"\n  },\n  {\n    \"name\": \"Winter\",\n    \"tag\": \"winter\",\n    \"thumbnail\": \"winter-walk\"\n  },\n  {\n    \"name\": \"Spring\",\n    \"tag\": \"spring\",\n    \"thumbnail\": \"esplanade-sunset_2018\"\n  }\n];\n","import React, { Component } from 'react';\nimport { Image, CloudinaryContext, Transformation } from 'cloudinary-react';\nimport axios from 'axios';\n// import albumList from '../utils/albums';\nimport Lightbox from 'react-image-lightbox';\nimport GalleryNav from './GalleryNav';\nimport 'react-image-lightbox/style.css'; \nimport '../css/list.css';\nimport '../css/gallery.css';\n\nclass Gallery extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      pictures: [],\n      selectedAlbum: null\n    };\n  }\n\n  componentDidMount () {\n    const { currentAlbum } = this.props;\n    if (currentAlbum) {\n      console.log('Loaded: ', currentAlbum);\n      this.updateGallery(currentAlbum);\n    }\n    \n  }\n\n  handleAlbumSelect = event => {\n    const tagName = event.target.id;\n    console.log('Selected album: ', tagName);\n    this.updateGallery(tagName);\n  }\n\n  updateGallery = tagName => {\n    // load images\n    const url = `https://res.cloudinary.com/cantimaginewhy/image/list/${tagName}.json`;\n    axios.get(url)\n      .then(res => {\n        this.setState({\n          selectedAlbum: tagName, \n          pictures: res.data.resources,\n          lightboxOpen: false,\n          selectedImage: null\n        });\n      });\n  }\n\n  openLightbox = pictureId => {\n    // console.log('open lightbox for: ' + pictureId);\n    this.setState({\n      lightboxOpen: true,\n      selectedImage: `https://res.cloudinary.com/cantimaginewhy/w_1000/w_500,l_ck_logo,o_30/${pictureId}.jpg`\n    })\n  }\n\n  closeLightbox = () => {\n    this.setState({\n      lightboxOpen: false\n    })\n  }\n    \n  render () {\n    const { pictures, selectedAlbum } = this.state;\n    return (\n        <CloudinaryContext cloudName=\"cantimaginewhy\">\n          \n          <GalleryNav handleNavChange={this.updateGallery} />\n          <main>\n            <h1 className=\"gallery-title\">{selectedAlbum}</h1>\n            <div className=\"gallery\">\n              {pictures.map(picture => {\n                // set caption\n                let caption;\n                try {\n                  caption = picture.context.custom.caption;\n                } catch (err) {\n                  caption = 'Untitled';\n                }\n                \n                let orient = picture.height > picture.width ? 'portrait' : 'landsc';\n                if (picture.height === picture.width) {\n                  orient = 'square';\n                }\n                return (\n                  <div className=\"responsive thumbnail\" key={picture.public_id}>\n                    \n                    <Image \n                      cloudName=\"cantimaginewhy\" \n                      publicId={picture.public_id} \n                      className={orient}\n                      onClick={() => this.openLightbox(picture.public_id)}\n                      >\n                        <Transformation\n                            crop=\"fit\"\n                            height=\"150\"\n                            dpr=\"auto\"\n                            responsive_placeholder=\"blank\"\n                        />\n                    </Image>\n                    <div className=\"title\">{caption}</div>\n                  </div>\n                  )\n              }) }\n            </div>\n            \n        </main>\n        {this.state.lightboxOpen && (\n          <Lightbox\n            mainSrc={this.state.selectedImage}\n            onCloseRequest={this.closeLightbox}\n          ></Lightbox>\n        )}\n        </CloudinaryContext>\n\n\n      );\n    }\n}\n\nexport default Gallery;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\n// import Nav from 'react-bootstrap/Nav';\n\nimport './App.css';\nimport './css/main.css';\n\n// import Menu from './components/Menu';\nimport Home from './components/Home';\nimport AboutPage from './components/About';\nimport Gallery from './components/Gallery';\n\nconst ContactPage = () => (\n  <div>\n    <header>Contact</header>\n    <main className=\"todo\">Coming Soon</main>\n  </div>\n);\n\nconst App = () => {\n  return (\n    <Router>\n      <nav className=\"menu\">\n        <ul>\n          <li>\n            <NavLink to=\"/home\">Home</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/about\">About</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/gallery\">Gallery</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/contact\">Contact</NavLink>\n          </li>\n        </ul>\n        \n      </nav>\n      <div className=\"content\">\n        <Route path=\"/home\" component={Home} />\n        <Route path=\"/about\" component={AboutPage} />\n        <Route path=\"/contact\" component={ContactPage} />\n        <Route path=\"/gallery\" component={Gallery} />\n      </div>\n      \n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}